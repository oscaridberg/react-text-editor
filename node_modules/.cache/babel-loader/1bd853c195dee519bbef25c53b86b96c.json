{"ast":null,"code":"var _jsxFileName = \"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './style/App.css';\nimport './style/TextEditor.css';\nimport React, { useEffect } from 'react';\nimport TextEditor from './components/TextEditor.js';\nimport { useState } from 'react';\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst SERVER_URL = \"ws://localhost:1337\";\n\nfunction App() {\n  _s();\n\n  const [docs, setDocs] = useState([]);\n  const [currentDoc, setCurrentDoc] = useState([]);\n\n  function testFunction(event) {\n    console.log(currentDoc.content);\n  }\n\n  useEffect(() => {\n    socket = io(SERVER_URL);\n    socket.emit(\"create\", currentDoc[\"_id\"]);\n    let data = {\n      _id: currentDoc['_id'],\n      title: currentDoc['title'],\n      html: currentDoc['content']\n    };\n    socket.emit(\"doc\", data);\n    socket.on(\"doc\", data => {\n      currentDoc.content = data.html;\n      console.log(data.html);\n      console.log('hesanssvejsan');\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [currentDoc]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(TextEditor, {\n      currentDoc: currentDoc,\n      setCurrentDoc: setCurrentDoc,\n      docs: docs,\n      setDocs: setDocs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LRZUQkKxNctNAx/b6wET2NU7QPg=\");\n\n_c = App;\nexport default App; // function handleChange(html, text) {\n//   if (updateCurrentDocOnChange) {\n//       const copy = Object.assign({}, currentDoc);\n//       copy.html = html;\n//       setCurrentDoc(copy);\n//   }\n//   updateCurrentDocOnChange = true;\n// }\n// function setEditorContent(content, triggerChange) {\n//     let element = document.querySelector(\"trix-editor\");\n//     updateCurrentDocOnChange = triggerChange;\n//     element.value = \"\";\n//     element.editor.setSelectedRange([0, 0]);\n//     updateCurrentDocOnChange = triggerChange;\n//     element.editor.insertHTML(content);\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","TextEditor","useState","io","socket","SERVER_URL","App","docs","setDocs","currentDoc","setCurrentDoc","testFunction","event","console","log","content","emit","data","_id","title","html","on","disconnect"],"sources":["/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/App.js"],"sourcesContent":["import './style/App.css';\nimport './style/TextEditor.css'\nimport React, { useEffect } from 'react';\nimport TextEditor from './components/TextEditor.js';\nimport { useState } from 'react';\nimport { io } from \"socket.io-client\";\n\nlet socket;\nconst SERVER_URL = \"ws://localhost:1337\";\n\nfunction App() {\n  const [docs, setDocs] = useState([]);\n  const [currentDoc, setCurrentDoc] = useState([]);\n\n  function testFunction(event) {\n    console.log(currentDoc.content);\n  }\n\n  useEffect(() => {\n    socket = io(SERVER_URL);\n    socket.emit(\"create\", currentDoc[\"_id\"]);\n\n    let data = {\n      _id: currentDoc['_id'],\n      title: currentDoc['title'],\n      html: currentDoc['content']\n    };\n    \n    socket.emit(\"doc\", data);\n\n    socket.on(\"doc\", (data) => {\n      currentDoc.content = data.html;\n      console.log(data.html);\n      console.log('hesanssvejsan');\n\n  });\n\n    return () => {\n      socket.disconnect();\n    }\n  }, [currentDoc]);\n\n  return (\n    <div className=\"App\">\n      <TextEditor currentDoc={currentDoc} setCurrentDoc={setCurrentDoc} docs={docs} setDocs={setDocs} />\n    </div>\n  );\n}\n\nexport default App;\n\n// function handleChange(html, text) {\n//   if (updateCurrentDocOnChange) {\n//       const copy = Object.assign({}, currentDoc);\n\n//       copy.html = html;\n\n//       setCurrentDoc(copy);\n//   }\n\n//   updateCurrentDocOnChange = true;\n// }\n\n// function setEditorContent(content, triggerChange) {\n//     let element = document.querySelector(\"trix-editor\");\n\n//     updateCurrentDocOnChange = triggerChange;\n//     element.value = \"\";\n//     element.editor.setSelectedRange([0, 0]);\n//     updateCurrentDocOnChange = triggerChange;\n//     element.editor.insertHTML(content);\n// }\n"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAO,wBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,IAAIC,MAAJ;AACA,MAAMC,UAAU,GAAG,qBAAnB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;EAEA,SAASS,YAAT,CAAsBC,KAAtB,EAA6B;IAC3BC,OAAO,CAACC,GAAR,CAAYL,UAAU,CAACM,OAAvB;EACD;;EAEDf,SAAS,CAAC,MAAM;IACdI,MAAM,GAAGD,EAAE,CAACE,UAAD,CAAX;IACAD,MAAM,CAACY,IAAP,CAAY,QAAZ,EAAsBP,UAAU,CAAC,KAAD,CAAhC;IAEA,IAAIQ,IAAI,GAAG;MACTC,GAAG,EAAET,UAAU,CAAC,KAAD,CADN;MAETU,KAAK,EAAEV,UAAU,CAAC,OAAD,CAFR;MAGTW,IAAI,EAAEX,UAAU,CAAC,SAAD;IAHP,CAAX;IAMAL,MAAM,CAACY,IAAP,CAAY,KAAZ,EAAmBC,IAAnB;IAEAb,MAAM,CAACiB,EAAP,CAAU,KAAV,EAAkBJ,IAAD,IAAU;MACzBR,UAAU,CAACM,OAAX,GAAqBE,IAAI,CAACG,IAA1B;MACAP,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACG,IAAjB;MACAP,OAAO,CAACC,GAAR,CAAY,eAAZ;IAEH,CALC;IAOA,OAAO,MAAM;MACXV,MAAM,CAACkB,UAAP;IACD,CAFD;EAGD,CAtBQ,EAsBN,CAACb,UAAD,CAtBM,CAAT;EAwBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE,QAAC,UAAD;MAAY,UAAU,EAAEA,UAAxB;MAAoC,aAAa,EAAEC,aAAnD;MAAkE,IAAI,EAAEH,IAAxE;MAA8E,OAAO,EAAEC;IAAvF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GArCQF,G;;KAAAA,G;AAuCT,eAAeA,GAAf,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}