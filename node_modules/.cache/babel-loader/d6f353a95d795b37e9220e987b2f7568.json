{"ast":null,"code":"var _jsxFileName = \"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/TextEditor.js\",\n    _s = $RefreshSig$();\n\nimport { Editor } from '@tinymce/tinymce-react';\nimport React, { useRef } from 'react';\nimport config from '../config/config.json';\nimport ToolBar from './ToolBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextEditor() {\n  _s();\n\n  const editorRef = useRef(null); // const log = () => {\n  //   if (editorRef.current) {\n  //     console.log(editorRef.current.getContent());\n  //   }\n  // };\n\n  console.log(editorRef.current.getContent());\n\n  const getText = () => {\n    if (editorRef.current) {\n      return editorRef.current.getContent();\n    }\n  };\n\n  console.log(getText());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textEditor\",\n    children: [/*#__PURE__*/_jsxDEV(ToolBar, {\n      content: getText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      apiKey: config.api_key,\n      onInit: (evt, editor) => editorRef.current = editor,\n      initialValue: \"<p>This is the initial content of the editor.</p>\",\n      init: {\n        height: 500,\n        menubar: false,\n        plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n        toolbar: 'undo redo | blocks | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TextEditor, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n\n_c = TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["Editor","React","useRef","config","ToolBar","TextEditor","editorRef","console","log","current","getContent","getText","api_key","evt","editor","height","menubar","plugins","toolbar","content_style"],"sources":["/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/TextEditor.js"],"sourcesContent":["import { Editor } from '@tinymce/tinymce-react';\nimport React, { useRef } from 'react';\nimport config from '../config/config.json';\nimport ToolBar from './ToolBar';\n\n\nexport default function TextEditor() {\n    const editorRef = useRef(null);\n    // const log = () => {\n    //   if (editorRef.current) {\n    //     console.log(editorRef.current.getContent());\n    //   }\n    // };\n    console.log(editorRef.current.getContent());\n\n    const getText = () => {\n      if (editorRef.current) {\n        return editorRef.current.getContent()\n      }\n    }\n    console.log(getText());\n    return (\n      <div className=\"textEditor\">\n        <ToolBar content={getText()}/>\n        <Editor\n          apiKey={config.api_key}\n          onInit={(evt, editor) => editorRef.current = editor}\n          initialValue=\"<p>This is the initial content of the editor.</p>\"\n          init={{\n            height: 500,\n            menubar: false,\n            plugins: [\n              'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n              'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n              'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n            ],\n            toolbar: 'undo redo | blocks | ' +\n              'bold italic forecolor | alignleft aligncenter ' +\n              'alignright alignjustify | bullist numlist outdent indent | ' +\n              'removeformat | help',\n            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n          }}\n        />\n      </div>\n    );\n  }"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACjC,MAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB,CADiC,CAEjC;EACA;EACA;EACA;EACA;;EACAK,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,OAAV,CAAkBC,UAAlB,EAAZ;;EAEA,MAAMC,OAAO,GAAG,MAAM;IACpB,IAAIL,SAAS,CAACG,OAAd,EAAuB;MACrB,OAAOH,SAAS,CAACG,OAAV,CAAkBC,UAAlB,EAAP;IACD;EACF,CAJD;;EAKAH,OAAO,CAACC,GAAR,CAAYG,OAAO,EAAnB;EACA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,wBACE,QAAC,OAAD;MAAS,OAAO,EAAEA,OAAO;IAAzB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MACE,MAAM,EAAER,MAAM,CAACS,OADjB;MAEE,MAAM,EAAE,CAACC,GAAD,EAAMC,MAAN,KAAiBR,SAAS,CAACG,OAAV,GAAoBK,MAF/C;MAGE,YAAY,EAAC,mDAHf;MAIE,IAAI,EAAE;QACJC,MAAM,EAAE,GADJ;QAEJC,OAAO,EAAE,KAFL;QAGJC,OAAO,EAAE,CACP,SADO,EACI,UADJ,EACgB,OADhB,EACyB,MADzB,EACiC,OADjC,EAC0C,SAD1C,EACqD,SADrD,EAEP,QAFO,EAEG,eAFH,EAEoB,cAFpB,EAEoC,MAFpC,EAE4C,YAF5C,EAGP,gBAHO,EAGW,OAHX,EAGoB,OAHpB,EAG6B,MAH7B,EAGqC,MAHrC,EAG6C,WAH7C,CAHL;QAQJC,OAAO,EAAE,0BACP,gDADO,GAEP,6DAFO,GAGP,qBAXE;QAYJC,aAAa,EAAE;MAZX;IAJR;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GAvCqBd,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}