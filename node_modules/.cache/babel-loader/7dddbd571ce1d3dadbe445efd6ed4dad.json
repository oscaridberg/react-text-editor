{"ast":null,"code":"var _jsxFileName = \"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/TextEditor.js\",\n    _s = $RefreshSig$();\n\nimport { Editor } from '@tinymce/tinymce-react';\nimport React, { useEffect, useRef } from 'react';\nimport config from '../config/config.json';\nimport docsModel from '../models/docs'; // import { useState } from 'react';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextEditor(_ref) {\n  _s();\n\n  let {\n    currentDoc,\n    setCurrentDoc,\n    docs,\n    setDocs\n  } = _ref;\n  // const [docs, setDocs] = useState([]);\n  // const [currentDoc, setCurrentDoc] = useState([]);\n  const editorRef = useRef(null);\n\n  const log = () => {\n    if (editorRef.current) {\n      const title = document.getElementById('documentTitle').value;\n      const content = editorRef.current.getContent();\n      const request = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: title,\n          content: content\n        })\n      };\n      fetch(`${config.base_url}/documents`, request).then(response => response.json());\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const allDocs = await docsModel.getAllDocs();\n      setDocs(allDocs);\n    })();\n  }, []);\n  useEffect(() => {\n    editorRef.current.setContent(currentDoc.content);\n  }); // useEffect((event) => {\n  //   (async () => {\n  //       const title = event.target.value;\n  //       const currentDoc = await docsModel.getOneDoc(title);\n  //       setCurrentDoc(currentDoc);\n  //       editorRef.current.setContent(currentDoc.content);\n  //   })();\n  // }, []);\n\n  async function fetchDoc(event) {\n    const title = event.target.value;\n    const currentDoc = await docsModel.getOneDoc(title);\n    setCurrentDoc(currentDoc);\n  }\n\n  ;\n\n  function handleKeyUp(event) {\n    // console.log(editorRef.current.getContent());\n    // currentDoc.content = editorRef.current.getContent();\n    setCurrentDoc({\n      _id: currentDoc._id,\n      title: currentDoc.title,\n      content: editorRef.current.getContent()\n    }); // console.log(currentDoc);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editorContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"appTitle\",\n      children: \"React Text Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"saveButton\",\n        onClick: log,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"docDropDown\",\n        onChange: fetchDoc,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"docChoice\",\n          value: \"-99\",\n          children: \"Choose a document\"\n        }, \"0\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), docs.map((doc, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: doc.title,\n          children: doc.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"documentTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"documentTitle\",\n        children: \"Document Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"documentTitle\",\n        className: \"titleField\",\n        defaultValue: currentDoc.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textEditor\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        apiKey: config.api_key,\n        onInit: (evt, editor) => editorRef.current = editor,\n        initialValue: currentDoc.content,\n        onKeyUp: handleKeyUp,\n        init: {\n          height: 500,\n          menubar: false,\n          plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n          toolbar: 'undo redo | blocks | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TextEditor, \"ueqoO+5gVAT6IRBF08iN84bYr2g=\");\n\n_c = TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["Editor","React","useEffect","useRef","config","docsModel","TextEditor","currentDoc","setCurrentDoc","docs","setDocs","editorRef","log","current","title","document","getElementById","value","content","getContent","request","method","headers","body","JSON","stringify","fetch","base_url","then","response","json","allDocs","getAllDocs","setContent","fetchDoc","event","target","getOneDoc","handleKeyUp","_id","map","doc","index","api_key","evt","editor","height","menubar","plugins","toolbar","content_style"],"sources":["/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/TextEditor.js"],"sourcesContent":["import { Editor } from '@tinymce/tinymce-react';\nimport React, { useEffect, useRef } from 'react';\nimport config from '../config/config.json';\nimport docsModel from '../models/docs';\n// import { useState } from 'react';\n\n\n\nexport default function TextEditor({currentDoc, setCurrentDoc, docs, setDocs}) {\n    // const [docs, setDocs] = useState([]);\n    // const [currentDoc, setCurrentDoc] = useState([]);\n    const editorRef = useRef(null);\n    \n    const log = () => {\n      if (editorRef.current) {\n        const title = document.getElementById('documentTitle').value;\n        const content = editorRef.current.getContent();\n        const request = {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({ title: title, content: content })\n        };\n\n        fetch(`${config.base_url}/documents`, request)\n          .then(response => response.json());\n      }\n    };\n\n    useEffect(() => {\n      (async () => {\n          const allDocs = await docsModel.getAllDocs();\n          setDocs(allDocs);\n      })();\n    }, []);\n\n    useEffect(() => {\n      editorRef.current.setContent(currentDoc.content);\n    })\n\n\n    // useEffect((event) => {\n    //   (async () => {\n    //       const title = event.target.value;\n\n    //       const currentDoc = await docsModel.getOneDoc(title);\n\n    //       setCurrentDoc(currentDoc);\n    //       editorRef.current.setContent(currentDoc.content);\n\n    //   })();\n    // }, []);\n\n    async function fetchDoc(event) {\n        const title = event.target.value;\n        const currentDoc = await docsModel.getOneDoc(title);\n        setCurrentDoc(currentDoc);\n    };\n\n    function handleKeyUp(event) {\n        // console.log(editorRef.current.getContent());\n        // currentDoc.content = editorRef.current.getContent();\n        setCurrentDoc({\n          _id: currentDoc._id,\n          title: currentDoc.title, \n          content: editorRef.current.getContent()\n        });\n        // console.log(currentDoc);\n    };\n\n \n\n    return (\n      <div className=\"editorContainer\">\n        <h1 className='appTitle'>React Text Editor</h1>\n        <div className='toolBar'>\n          <button className='saveButton' onClick={log}>Save</button>\n          <select\n          className='docDropDown'\n          onChange={fetchDoc}\n          >\n          <option id='docChoice' value=\"-99\" key=\"0\">Choose a document</option>\n          {docs.map((doc, index) => <option value={doc.title} key={index}>{doc.title}</option>)}\n          </select>\n        </div>\n\n      <form className='documentTitle'>\n        <label htmlFor=\"documentTitle\">Document Title</label>\n        <input type=\"text\" id=\"documentTitle\" className='titleField' defaultValue={currentDoc.title}></input>\n      </form>\n\n        <div className='textEditor'>\n          <Editor\n            apiKey={config.api_key}\n            onInit={(evt, editor) => editorRef.current = editor}\n            initialValue={currentDoc.content}\n            onKeyUp={handleKeyUp}\n            init={{\n              height: 500,\n              menubar: false,\n              plugins: [\n                'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n                'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n                'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n              ],\n              toolbar: 'undo redo | blocks | ' +\n                'bold italic forecolor | alignleft aligncenter ' +\n                'alignright alignjustify | bullist numlist outdent indent | ' +\n                'removeformat | help',\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n            }}\n          />\n        </div>\n        \n      </div>\n    );\n  }\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}