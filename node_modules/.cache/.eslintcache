[{"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/index.js":"1","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/reportWebVitals.js":"2","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/App.js":"3","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/TextEditor.js":"4","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/ToolBar.js":"5","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/models/docs.js":"6"},{"size":535,"mtime":1662034963240,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1662031798626,"results":"9","hashOfConfig":"8"},{"size":1324,"mtime":1664221076035,"results":"10","hashOfConfig":"8"},{"size":3209,"mtime":1664218363472,"results":"11","hashOfConfig":"8"},{"size":369,"mtime":1662123806638,"results":"12","hashOfConfig":"13"},{"size":673,"mtime":1663690525303,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"qtnjr1",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13wf0ak",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/index.js",[],[],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/reportWebVitals.js",[],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/App.js",["35"],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/TextEditor.js",["36"],[],"import { Editor } from '@tinymce/tinymce-react';\nimport React, { useEffect, useRef } from 'react';\nimport config from '../config/config.json';\nimport docsModel from '../models/docs';\n// import { useState } from 'react';\n\n\n\nexport default function TextEditor({currentDoc, setCurrentDoc, docs, setDocs}) {\n    // const [docs, setDocs] = useState([]);\n    // const [currentDoc, setCurrentDoc] = useState([]);\n    const editorRef = useRef(null);\n    \n    const log = () => {\n      if (editorRef.current) {\n        const title = document.getElementById('documentTitle').value;\n        const content = editorRef.current.getContent();\n        const request = {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({ title: title, content: content })\n        };\n\n        fetch(`${config.base_url}/documents`, request)\n          .then(response => response.json());\n      }\n    };\n\n    useEffect(() => {\n      (async () => {\n          const allDocs = await docsModel.getAllDocs();\n          setDocs(allDocs);\n      })();\n    }, []);\n\n    async function fetchDoc(event) {\n        const title = event.target.value;\n        const doc = await docsModel.getOneDoc(title);\n        setCurrentDoc(doc);\n    };\n\n    async function handleKeyUp(event) {\n        setCurrentDoc({\n          _id: currentDoc._id,\n          title: currentDoc.title, \n          content: editorRef.current.getContent()\n        });\n    };\n\n \n\n    return (\n      <div className=\"editorContainer\">\n        <h1 className='appTitle'>React Text Editor</h1>\n        <div className='toolBar'>\n          <button className='saveButton' onClick={log}>Save</button>\n          <select\n          className='docDropDown'\n          onChange={fetchDoc}\n          >\n          <option id='docChoice' value=\"-99\" key=\"0\">Choose a document</option>\n          {docs.map((doc, index) => <option value={doc.title} key={index}>{doc.title}</option>)}\n          </select>\n        </div>\n\n      <form className='documentTitle'>\n        <label htmlFor=\"documentTitle\">Document Title</label>\n        <input type=\"text\" id=\"documentTitle\" className='titleField' defaultValue={currentDoc.title}></input>\n      </form>\n\n        <div className='textEditor'>\n          <Editor\n            apiKey={config.api_key}\n            onInit={(evt, editor) => editorRef.current = editor}\n            value={currentDoc['content']}\n            onKeyUp={handleKeyUp}\n            init={{\n              height: 500,\n              menubar: false,\n              plugins: [\n                'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n                'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n                'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n              ],\n              toolbar: 'undo redo | blocks | ' +\n                'bold italic forecolor | alignleft aligncenter ' +\n                'alignright alignjustify | bullist numlist outdent indent | ' +\n                'removeformat | help',\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n            }}\n          />\n        </div>\n        \n      </div>\n    );\n  }\n\n","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/ToolBar.js",["37"],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/models/docs.js",[],[],{"ruleId":"38","severity":1,"message":"39","line":37,"column":33,"nodeType":"40","messageId":"41","endLine":37,"endColumn":35},{"ruleId":"42","severity":1,"message":"43","line":34,"column":8,"nodeType":"44","endLine":34,"endColumn":10,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":23},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDocs'. Either include it or remove the dependency array. If 'setDocs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["50"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar",{"desc":"51","fix":"52"},"Update the dependencies array to be: [setDocs]",{"range":"53","text":"54"},[1079,1081],"[setDocs]"]