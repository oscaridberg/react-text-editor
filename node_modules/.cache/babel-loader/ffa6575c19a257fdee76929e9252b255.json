{"ast":null,"code":"var _jsxFileName = \"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './style/App.css';\nimport './style/TextEditor.css';\nimport React, { useEffect } from 'react';\nimport TextEditor from './components/TextEditor.js';\nimport { useState } from 'react';\nimport { io } from \"socket.io-client\";\nimport config from './config/config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst SERVER_URL = \"ws://localhost:1337\";\n\nfunction App() {\n  _s();\n\n  const [docs, setDocs] = useState([]);\n  const [currentDoc, setCurrentDoc] = useState([]);\n  useEffect(() => {// console.log(currentDoc.content);\n  });\n\n  function saveToDb(title, content) {\n    const request = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: title,\n        content: content\n      })\n    };\n    fetch(`${config.base_url}/documents`, request).then(response => response.json());\n  }\n\n  useEffect(() => {\n    socket = io(SERVER_URL);\n    socket.emit(\"create\", currentDoc[\"_id\"]); // console.log(currentDoc.content);\n\n    let data = {\n      _id: currentDoc['_id'],\n      title: currentDoc['title'],\n      html: currentDoc['content']\n    };\n    socket.emit(\"doc\", data);\n    socket.on(\"doc\", data => {\n      // console.log(data.html);\n      if (currentDoc['content'] != data.html) {\n        setCurrentDoc({\n          _id: currentDoc._id,\n          title: currentDoc.title,\n          content: data.html\n        });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [currentDoc]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(TextEditor, {\n      currentDoc: currentDoc,\n      setCurrentDoc: setCurrentDoc,\n      docs: docs,\n      setDocs: setDocs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aSVc4vQszMttRzxeBInPPru8NOw=\");\n\n_c = App;\nexport default App; // function handleChange(html, text) {\n//   if (updateCurrentDocOnChange) {\n//       const copy = Object.assign({}, currentDoc);\n//       copy.html = html;\n//       setCurrentDoc(copy);\n//   }\n//   updateCurrentDocOnChange = true;\n// }\n// function setEditorContent(content, triggerChange) {\n//     let element = document.querySelector(\"trix-editor\");\n//     updateCurrentDocOnChange = triggerChange;\n//     element.value = \"\";\n//     element.editor.setSelectedRange([0, 0]);\n//     updateCurrentDocOnChange = triggerChange;\n//     element.editor.insertHTML(content);\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","TextEditor","useState","io","config","socket","SERVER_URL","App","docs","setDocs","currentDoc","setCurrentDoc","saveToDb","title","content","request","method","headers","body","JSON","stringify","_id","fetch","base_url","then","response","json","emit","data","html","on","disconnect"],"sources":["/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/App.js"],"sourcesContent":["import './style/App.css';\nimport './style/TextEditor.css'\nimport React, { useEffect } from 'react';\nimport TextEditor from './components/TextEditor.js';\nimport { useState } from 'react';\nimport { io } from \"socket.io-client\";\nimport config from './config/config.json';\n\n\nlet socket;\nconst SERVER_URL = \"ws://localhost:1337\";\n\nfunction App() {\n  const [docs, setDocs] = useState([]);\n  const [currentDoc, setCurrentDoc] = useState([]);\n\n  useEffect(() => {\n    // console.log(currentDoc.content);\n    \n  })\n\n  function saveToDb (title, content) {\n    const request = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({ _id: title, content: content })\n    };\n\n    fetch(`${config.base_url}/documents`, request)\n      .then(response => response.json());\n  }\n\n  useEffect(() => {\n    socket = io(SERVER_URL);\n    socket.emit(\"create\", currentDoc[\"_id\"]);\n    // console.log(currentDoc.content);\n\n    let data = {\n      _id: currentDoc['_id'],\n      title: currentDoc['title'],\n      html: currentDoc['content']\n    };\n    \n    socket.emit(\"doc\", data);\n\n    socket.on(\"doc\", (data) => {\n      // console.log(data.html);\n      if (currentDoc['content'] != data.html) {\n        setCurrentDoc({\n          _id: currentDoc._id,\n          title: currentDoc.title, \n          content: data.html\n        })\n      }\n  });\n\n    return () => {\n      socket.disconnect();\n    }\n  }, [currentDoc]);\n\n  return (\n    <div className=\"App\">\n      <TextEditor currentDoc={currentDoc} setCurrentDoc={setCurrentDoc} docs={docs} setDocs={setDocs} />\n    </div>\n  );\n}\n\nexport default App;\n\n// function handleChange(html, text) {\n//   if (updateCurrentDocOnChange) {\n//       const copy = Object.assign({}, currentDoc);\n\n//       copy.html = html;\n\n//       setCurrentDoc(copy);\n//   }\n\n//   updateCurrentDocOnChange = true;\n// }\n\n// function setEditorContent(content, triggerChange) {\n//     let element = document.querySelector(\"trix-editor\");\n\n//     updateCurrentDocOnChange = triggerChange;\n//     element.value = \"\";\n//     element.editor.setSelectedRange([0, 0]);\n//     updateCurrentDocOnChange = triggerChange;\n//     element.editor.insertHTML(content);\n// }\n"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAO,wBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,IAAIC,MAAJ;AACA,MAAMC,UAAU,GAAG,qBAAnB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;EAEAF,SAAS,CAAC,MAAM,CACd;EAED,CAHQ,CAAT;;EAKA,SAASY,QAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;IACjC,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MADM;MAEdC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFK;MAGdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEC,GAAG,EAAER,KAAP;QAAcC,OAAO,EAAEA;MAAvB,CAAf;IAHQ,CAAhB;IAMAQ,KAAK,CAAE,GAAElB,MAAM,CAACmB,QAAS,YAApB,EAAiCR,OAAjC,CAAL,CACGS,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB;EAED;;EAED1B,SAAS,CAAC,MAAM;IACdK,MAAM,GAAGF,EAAE,CAACG,UAAD,CAAX;IACAD,MAAM,CAACsB,IAAP,CAAY,QAAZ,EAAsBjB,UAAU,CAAC,KAAD,CAAhC,EAFc,CAGd;;IAEA,IAAIkB,IAAI,GAAG;MACTP,GAAG,EAAEX,UAAU,CAAC,KAAD,CADN;MAETG,KAAK,EAAEH,UAAU,CAAC,OAAD,CAFR;MAGTmB,IAAI,EAAEnB,UAAU,CAAC,SAAD;IAHP,CAAX;IAMAL,MAAM,CAACsB,IAAP,CAAY,KAAZ,EAAmBC,IAAnB;IAEAvB,MAAM,CAACyB,EAAP,CAAU,KAAV,EAAkBF,IAAD,IAAU;MACzB;MACA,IAAIlB,UAAU,CAAC,SAAD,CAAV,IAAyBkB,IAAI,CAACC,IAAlC,EAAwC;QACtClB,aAAa,CAAC;UACZU,GAAG,EAAEX,UAAU,CAACW,GADJ;UAEZR,KAAK,EAAEH,UAAU,CAACG,KAFN;UAGZC,OAAO,EAAEc,IAAI,CAACC;QAHF,CAAD,CAAb;MAKD;IACJ,CATC;IAWA,OAAO,MAAM;MACXxB,MAAM,CAAC0B,UAAP;IACD,CAFD;EAGD,CA3BQ,EA2BN,CAACrB,UAAD,CA3BM,CAAT;EA6BA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE,QAAC,UAAD;MAAY,UAAU,EAAEA,UAAxB;MAAoC,aAAa,EAAEC,aAAnD;MAAkE,IAAI,EAAEH,IAAxE;MAA8E,OAAO,EAAEC;IAAvF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAtDQF,G;;KAAAA,G;AAwDT,eAAeA,GAAf,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}