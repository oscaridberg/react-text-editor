[{"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/index.js":"1","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/reportWebVitals.js":"2","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/App.js":"3","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/TextEditor.js":"4","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/ToolBar.js":"5","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/models/docs.js":"6","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/Login.js":"7","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/models/auth.js":"8"},{"size":535,"mtime":1662034963240,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1662031798626,"results":"11","hashOfConfig":"10"},{"size":2165,"mtime":1664915390610,"results":"12","hashOfConfig":"10"},{"size":2596,"mtime":1664912433799,"results":"13","hashOfConfig":"10"},{"size":369,"mtime":1662123806638,"results":"14","hashOfConfig":"15"},{"size":1664,"mtime":1664915547081,"results":"16","hashOfConfig":"10"},{"size":1164,"mtime":1664918167410,"results":"17","hashOfConfig":"10"},{"size":783,"mtime":1664979007054,"results":"18","hashOfConfig":"10"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1igl05f",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13wf0ak",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/index.js",[],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/reportWebVitals.js",[],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/App.js",["46","47","48"],[],"import './style/App.css';\nimport './style/TextEditor.css'\nimport React, { useEffect } from 'react';\nimport TextEditor from './components/TextEditor.js';\nimport Login from './components/Login.js';\nimport { useState } from 'react';\nimport { io } from \"socket.io-client\";\nimport config from './config/config.json';\nimport authModel from './models/auth';\nimport docsModel from './models/docs';\n\n\nlet socket;\nconst SERVER_URL = config.base_url;\n// \"base_url\": \"https://jsramverk-editor-osid15.azurewebsites.net/\"\n\n\nfunction App() {\n  const [docs, setDocs] = useState([]);\n  const [currentDoc, setCurrentDoc] = useState([]);\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({});\n\n\n  async function getAllDocs() {\n    const allDocs = await docsModel.getAllDocs(token, user);\n    setDocs(await allDocs);\n  };\n\n  async function fetchDoc(event) {\n    const title = event.target.value;\n    const doc = await docsModel.getOneDoc(title, token);\n    setCurrentDoc(doc);\n  };\n\n  async function saveDoc(title, content) {\n    await docsModel.saveDoc(title, content, token, user);\n  }\n\n  useEffect(() => {\n    (async () => {\n      await getAllDocs();\n    })();\n  }, [token]);\n\n  useEffect(() => {\n    socket = io(SERVER_URL);\n    socket.emit(\"create\", currentDoc[\"_id\"]);\n    let data = {\n      _id: currentDoc['_id'],\n      title: currentDoc['title'],\n      html: currentDoc['content'],\n      authUser: user.email\n    };\n    \n    socket.emit(\"doc\", data);\n\n    socket.on(\"doc\", (data) => {\n      if (currentDoc['content'] !== data.html) {\n        setCurrentDoc({\n          _id: currentDoc._id,\n          title: currentDoc.title, \n          content: data.html,\n          authUser: user.email\n        })\n      }\n  });\n\n    return () => {\n      socket.disconnect();\n    }\n  }, [currentDoc]);\n\n  return (\n    <div className=\"App\">\n      <h1 className='appTitle'>React Text Editor</h1>\n      {token ? \n      <>\n       <TextEditor currentDoc={currentDoc} setCurrentDoc={setCurrentDoc} docs={docs} fetchDoc={fetchDoc} saveDoc={saveDoc}/>\n      </>\n      :\n      <Login setToken={setToken} user={user} setUser={setUser} />}\n    </div>\n  );\n}\n\nexport default App;","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/TextEditor.js",["49","50"],[],"import { Editor } from '@tinymce/tinymce-react';\nimport React, { useEffect, useRef } from 'react';\nimport config from '../config/config.json';\nimport docsModel from '../models/docs';\n// import { useState } from 'react';\n\n\n\nexport default function TextEditor({currentDoc, setCurrentDoc, docs, fetchDoc, saveDoc}) {\n    const editorRef = useRef(null);\n    \n    const save = () => {\n      if (editorRef.current) {\n        const title = document.getElementById('documentTitle').value;\n        const content = editorRef.current.getContent();\n        saveDoc(title, content);\n      }\n    };\n\n    async function handleKeyUp(event) {\n        setCurrentDoc({\n          _id: currentDoc._id,\n          title: currentDoc.title, \n          content: editorRef.current.getContent()\n        });\n    };\n\n \n\n    return (\n      <div className=\"editorContainer\">\n        <div className='toolBar'>\n          <button className='saveButton' onClick={save}>Save</button>\n          <select\n          className='docDropDown'\n          onChange={fetchDoc}\n          >\n          <option id='docChoice' value=\"-99\" key=\"0\">Choose a document</option>\n          {docs.length ?\n            <>\n            {docs.map((doc, index) => <option value={doc.title} key={index}>{doc.title}</option>)}\n            </>\n          :\n          <option></option>\n          }\n          </select>\n        </div>\n\n      <form className='documentTitle'>\n        <label htmlFor=\"documentTitle\">Document Title</label>\n        <input type=\"text\" id=\"documentTitle\" className='titleField' defaultValue={currentDoc.title}></input>\n      </form>\n\n        <div className='textEditor'>\n          <Editor\n            apiKey={config.api_key}\n            onInit={(evt, editor) => editorRef.current = editor}\n            value={currentDoc['content']}\n            onKeyUp={handleKeyUp}\n            init={{\n              height: 500,\n              menubar: false,\n              plugins: [\n                'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n                'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n                'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n              ],\n              toolbar: 'undo redo | blocks | ' +\n                'bold italic forecolor | alignleft aligncenter ' +\n                'alignright alignjustify | bullist numlist outdent indent | ' +\n                'removeformat | help',\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n            }}\n          />\n        </div>\n        \n      </div>\n    );\n  }\n\n","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/ToolBar.js",["51"],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/models/docs.js",[],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/Login.js",["52"],[],"import { useState } from 'react';\nimport authModel from '../models/auth';\n\nexport default function Login({setToken, user, setUser}) {\n\n    function changeHandler(event) {\n        let newObject = {};\n        newObject[event.target.name] = event.target.value;\n\n        setUser({...user, ...newObject});\n    };\n\n    async function register() {\n        await authModel.register(user);\n        await login();\n    };\n\n    async function login() {\n        const result = await authModel.login(user);\n        if (result.data) {\n            setToken(result.data.token);\n        } else {\n            console.log('invalid user');\n        }\n    }\n\n    return (\n        <div className='loginContainer'>\n        <h1>Login or register</h1>\n            <p className='loginTitle'>Email:</p>\n            <input type=\"email\" name=\"email\" onChange={changeHandler} />\n\n            <p className='loginTitle'>Password:</p>\n            <input type=\"password\" name=\"password\" onChange={changeHandler} />\n\n            <button className='registerButton' onClick={register} >Register</button>\n            <button className='loginButton' onClick={login} >Login</button>\n        </div>\n    );\n}","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/models/auth.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":9,"column":8,"nodeType":"55","messageId":"56","endLine":9,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":44,"column":6,"nodeType":"59","endLine":44,"endColumn":13,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":72,"column":6,"nodeType":"59","endLine":72,"endColumn":18,"suggestions":"62"},{"ruleId":"53","severity":1,"message":"63","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":26},{"ruleId":"53","severity":1,"message":"64","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":17},{"ruleId":"53","severity":1,"message":"65","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":23},{"ruleId":"53","severity":1,"message":"66","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":18},"no-unused-vars","'authModel' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllDocs'. Either include it or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentDoc' needs the current value of 'user.email'.",["68"],"'useEffect' is defined but never used.","'docsModel' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [getAllDocs, token]",{"range":"73","text":"74"},"Update the dependencies array to be: [currentDoc, user.email]",{"range":"75","text":"76"},[1176,1183],"[getAllDocs, token]",[1785,1797],"[currentDoc, user.email]"]