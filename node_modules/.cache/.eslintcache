[{"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/index.js":"1","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/reportWebVitals.js":"2","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/App.js":"3","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/TextEditor.js":"4","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/ToolBar.js":"5","/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/models/docs.js":"6"},{"size":535,"mtime":1662034963240,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1662031798626,"results":"9","hashOfConfig":"8"},{"size":410,"mtime":1663602609158,"results":"10","hashOfConfig":"8"},{"size":3265,"mtime":1663602566328,"results":"11","hashOfConfig":"8"},{"size":369,"mtime":1662123806638,"results":"12","hashOfConfig":"13"},{"size":680,"mtime":1663010439292,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qtnjr1",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13wf0ak",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/index.js",[],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/reportWebVitals.js",[],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/App.js",["35","36"],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/TextEditor.js",["37"],[],"import { Editor } from '@tinymce/tinymce-react';\nimport React, { useEffect, useRef } from 'react';\nimport config from '../config/config.json';\nimport docsModel from '../models/docs';\nimport { useState } from 'react';\n\n\n\nexport default function TextEditor({docs, setDocs}) {\n    // const [docs, setDocs] = useState([]);\n    const [currentDoc, setCurrentDoc] = useState([]);\n\n    const editorRef = useRef(null);\n    \n    const log = () => {\n      if (editorRef.current) {\n        const title = document.getElementById('documentTitle').value;\n        const content = editorRef.current.getContent();\n        const request = {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({ title: title, content: content })\n        };\n\n        fetch(`${config.base_url}/documents`, request)\n          .then(response => response.json());\n      }\n    };\n\n    useEffect(() => {\n      (async () => {\n          const allDocs = await docsModel.getAllDocs();\n          setDocs(allDocs);\n      })();\n    }, []);\n\n\n    // useEffect((event) => {\n    //   (async () => {\n    //       const title = event.target.value;\n\n    //       const currentDoc = await docsModel.getOneDoc(title);\n\n    //       setCurrentDoc(currentDoc);\n    //       editorRef.current.setContent(currentDoc.content);\n\n    //   })();\n    // }, []);\n\n    async function fetchDoc(event) {\n        const title = event.target.value;\n        const currentDoc = await docsModel.getOneDoc(title);\n        setCurrentDoc(currentDoc);\n    };\n\n \n\n    return (\n      <div className=\"editorContainer\">\n        <h1 className='appTitle'>React Text Editor</h1>\n        <div className='toolBar'>\n          <button className='saveButton' onClick={log}>Save</button>\n          <select\n          className='docDropDown'\n          onChange={fetchDoc}\n          >\n          <option id='docChoice' value=\"-99\" key=\"0\">Choose a document</option>\n          {docs.map((doc, index) => <option value={doc.title} key={index}>{doc.title}</option>)}\n          </select>\n        </div>\n\n      <form className='documentTitle'>\n        <label htmlFor=\"documentTitle\">Document Title</label>\n        <input type=\"text\" id=\"documentTitle\" className='titleField' defaultValue={currentDoc.title}></input>\n      </form>\n\n        <div className='textEditor'>\n          <Editor\n            apiKey={config.api_key}\n            onInit={(evt, editor) => editorRef.current = editor}\n            initialValue={currentDoc.content}\n            init={{\n              height: 500,\n              menubar: false,\n              plugins: [\n                'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n                'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n                'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n              ],\n              toolbar: 'undo redo | blocks | ' +\n                'bold italic forecolor | alignleft aligncenter ' +\n                'alignright alignjustify | bullist numlist outdent indent | ' +\n                'removeformat | help',\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n            }}\n          />\n        </div>\n        \n      </div>\n    );\n  }\n\n",[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/components/ToolBar.js",["38"],[],"/home/oscar/dbwebb_kurser/jsramverk/react-text-editor/src/models/docs.js",["39"],[],{"ruleId":"40","severity":1,"message":"41","line":10,"column":10,"nodeType":"42","messageId":"43","endLine":10,"endColumn":20},{"ruleId":"40","severity":1,"message":"44","line":10,"column":22,"nodeType":"42","messageId":"43","endLine":10,"endColumn":35},{"ruleId":"45","severity":1,"message":"46","line":35,"column":8,"nodeType":"47","endLine":35,"endColumn":10,"suggestions":"48"},{"ruleId":"40","severity":1,"message":"49","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":23},{"ruleId":"40","severity":1,"message":"50","line":15,"column":15,"nodeType":"42","messageId":"43","endLine":15,"endColumn":23},"no-unused-vars","'currentDoc' is assigned a value but never used.","Identifier","unusedVar","'setCurrentDoc' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDocs'. Either include it or remove the dependency array. If 'setDocs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["51"],"'useRef' is defined but never used.","'foundDoc' is assigned a value but never used.",{"desc":"52","fix":"53"},"Update the dependencies array to be: [setDocs]",{"range":"54","text":"55"},[1047,1049],"[setDocs]"]