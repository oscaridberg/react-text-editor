{"ast":null,"code":"import config from '../config/config.json';\nconst docs = {\n  // getAllDocs: async function getAllDocs (token, user) {\n  //     const response = await fetch(`${config.base_url}/documents`, {\n  //         headers: {\n  //             \"x-access-token\": token,\n  //         },\n  //     });\n  //     const result = await response.json();\n  //     const filteredRes = await docs.filterDocs(result, user);\n  //     return filteredRes;\n  // },\n  getAllDocs: async function getAllDocs(user) {\n    const response = await fetch(`${config.base_url}/graphql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'aaplication/json'\n      },\n      body: JSON.stringify({\n        query: \"{ documents { title content authUser } ]\"\n      })\n    }).then(r => r.json()).then(data => console.log('data returned:', data));\n    const result = await response.json();\n    const filteredRes = await docs.filterDocs(result, user);\n    return filteredRes;\n  },\n  getOneDoc: async function getOneDoc(title, token) {\n    const response = await fetch(`${config.base_url}/documents`, {\n      headers: {\n        \"x-access-token\": token\n      }\n    });\n    const result = await response.json();\n    let currentDoc = {};\n    result.forEach(function (arrayitem) {\n      if (arrayitem.title === title) {\n        currentDoc = arrayitem;\n      }\n    });\n    return currentDoc;\n  },\n  saveDoc: async function saveDoc(title, content, token, user) {\n    console.log(user);\n    const request = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': token\n      },\n      body: JSON.stringify({\n        title: title,\n        content: content,\n        user: user.email\n      })\n    };\n    fetch(`${config.base_url}/documents`, request).then(response => response.json());\n  },\n  filterDocs: async function filterDocs(docs, user) {\n    const filteredDocs = docs.filter(doc => doc.authUser === user.email);\n    return filteredDocs;\n  }\n};\nexport default docs;","map":{"version":3,"names":["config","docs","getAllDocs","user","response","fetch","base_url","method","headers","body","JSON","stringify","query","then","r","json","data","console","log","result","filteredRes","filterDocs","getOneDoc","title","token","currentDoc","forEach","arrayitem","saveDoc","content","request","email","filteredDocs","filter","doc","authUser"],"sources":["/home/oscaridberg/dbwebb-kurser/jsramverk/react-text-editor/src/models/docs.js"],"sourcesContent":["import config from '../config/config.json';\n\n\nconst docs = {\n    // getAllDocs: async function getAllDocs (token, user) {\n    //     const response = await fetch(`${config.base_url}/documents`, {\n    //         headers: {\n    //             \"x-access-token\": token,\n    //         },\n    //     });\n    //     const result = await response.json();\n    //     const filteredRes = await docs.filterDocs(result, user);\n    //     return filteredRes;\n    // },\n\n    getAllDocs: async function getAllDocs (user) {\n        const response = await fetch(`${config.base_url}/graphql`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'aaplication/json'\n            },\n            body: JSON.stringify({ query: \"{ documents { title content authUser } ]\" })\n        })\n        .then(r => r.json())\n        .then(data => console.log('data returned:', data));\n\n        const result = await response.json();\n        const filteredRes = await docs.filterDocs(result, user);\n        return filteredRes;\n    },\n\n    getOneDoc: async function getOneDoc (title, token) {\n        const response = await fetch(`${config.base_url}/documents`, {\n            headers: {\n                \"x-access-token\": token,\n            }\n        });\n        const result = await response.json();\n        let currentDoc = {};\n        result.forEach(function (arrayitem) {\n            if (arrayitem.title === title) {\n                currentDoc =  arrayitem;\n            }\n        });\n        \n        return currentDoc;\n    },\n\n    saveDoc: async function saveDoc(title, content, token, user) {\n        console.log(user);\n        const request = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': token\n            },\n            body: JSON.stringify({\n                title: title, \n                content: content,\n                user: user.email\n            })\n        };\n\n        fetch(`${config.base_url}/documents`, request)\n            .then(response => response.json());\n    },\n\n    filterDocs: async function filterDocs(docs, user) {\n        const filteredDocs = docs.filter(doc => doc.authUser === user.email);\n\n        return filteredDocs\n    }\n}\n\nexport default docs;"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AAGA,MAAMC,IAAI,GAAG;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,UAAU,EAAE,eAAeA,UAAf,CAA2BC,IAA3B,EAAiC;IACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,MAAM,CAACM,QAAS,UAApB,EAA+B;MACvDC,MAAM,EAAE,MAD+C;MAEvDC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,UAAU;MAFL,CAF8C;MAMvDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEC,KAAK,EAAE;MAAT,CAAf;IANiD,CAA/B,CAAL,CAQtBC,IARsB,CAQjBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARY,EAStBF,IATsB,CASjBG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,IAA9B,CATS,CAAvB;IAWA,MAAMG,MAAM,GAAG,MAAMf,QAAQ,CAACW,IAAT,EAArB;IACA,MAAMK,WAAW,GAAG,MAAMnB,IAAI,CAACoB,UAAL,CAAgBF,MAAhB,EAAwBhB,IAAxB,CAA1B;IACA,OAAOiB,WAAP;EACH,CA3BQ;EA6BTE,SAAS,EAAE,eAAeA,SAAf,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAwC;IAC/C,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,MAAM,CAACM,QAAS,YAApB,EAAiC;MACzDE,OAAO,EAAE;QACL,kBAAkBgB;MADb;IADgD,CAAjC,CAA5B;IAKA,MAAML,MAAM,GAAG,MAAMf,QAAQ,CAACW,IAAT,EAArB;IACA,IAAIU,UAAU,GAAG,EAAjB;IACAN,MAAM,CAACO,OAAP,CAAe,UAAUC,SAAV,EAAqB;MAChC,IAAIA,SAAS,CAACJ,KAAV,KAAoBA,KAAxB,EAA+B;QAC3BE,UAAU,GAAIE,SAAd;MACH;IACJ,CAJD;IAMA,OAAOF,UAAP;EACH,CA5CQ;EA8CTG,OAAO,EAAE,eAAeA,OAAf,CAAuBL,KAAvB,EAA8BM,OAA9B,EAAuCL,KAAvC,EAA8CrB,IAA9C,EAAoD;IACzDc,OAAO,CAACC,GAAR,CAAYf,IAAZ;IACA,MAAM2B,OAAO,GAAG;MACZvB,MAAM,EAAE,MADI;MAEZC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,kBAAkBgB;MAFb,CAFG;MAMZf,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBY,KAAK,EAAEA,KADU;QAEjBM,OAAO,EAAEA,OAFQ;QAGjB1B,IAAI,EAAEA,IAAI,CAAC4B;MAHM,CAAf;IANM,CAAhB;IAaA1B,KAAK,CAAE,GAAEL,MAAM,CAACM,QAAS,YAApB,EAAiCwB,OAAjC,CAAL,CACKjB,IADL,CACUT,QAAQ,IAAIA,QAAQ,CAACW,IAAT,EADtB;EAEH,CA/DQ;EAiETM,UAAU,EAAE,eAAeA,UAAf,CAA0BpB,IAA1B,EAAgCE,IAAhC,EAAsC;IAC9C,MAAM6B,YAAY,GAAG/B,IAAI,CAACgC,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,QAAJ,KAAiBhC,IAAI,CAAC4B,KAAzC,CAArB;IAEA,OAAOC,YAAP;EACH;AArEQ,CAAb;AAwEA,eAAe/B,IAAf"},"metadata":{},"sourceType":"module"}